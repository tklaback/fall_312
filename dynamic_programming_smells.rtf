{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww8400\viewh16060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Dynamic programming smells\
\
1. Greedy gets stuck suboptimally.\
\
2. Sub problems are repeated ( caching, memoization )\
\
3. Once solved, a subsolution is solved (we are done with it) ( traveling salesman not good for dynamic programming because adding a new node can mess with out current solution)\
\
4. There are subproblems (there are recurrence relationships\
}